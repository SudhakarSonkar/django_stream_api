[
    {
        "label": "django.db",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db",
        "description": "django.db",
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "mixins",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "watchlist_app.api.views",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchListAV",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchDetailAV",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamPlatformAV",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamDetailsAV",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewList",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewDetail",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewCreate",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamPlatformVS",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "WatchListSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "StreamPlatformSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Review\n        exclude = ('watchlist',)\n        # fields = '__all__'\nclass WatchListSerializer(serializers.ModelSerializer):        \n    reviews = ReviewSerializer(many=True, read_only=True)\n    class Meta:\n        model = WatchList\n        fields = '__all__'",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "WatchListSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class WatchListSerializer(serializers.ModelSerializer):        \n    reviews = ReviewSerializer(many=True, read_only=True)\n    class Meta:\n        model = WatchList\n        fields = '__all__'\nclass StreamPlatformSerializer(serializers.ModelSerializer):\n    watchlist = WatchListSerializer(many=True, read_only=True)\n    # watchlist = serializers.StringRelatedField(many=True)\n    # watchlist = serializers.HyperlinkedRelatedField(many=True, read_only=True, view_name=\"movie-detail\")\n    class Meta:",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "StreamPlatformSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class StreamPlatformSerializer(serializers.ModelSerializer):\n    watchlist = WatchListSerializer(many=True, read_only=True)\n    # watchlist = serializers.StringRelatedField(many=True)\n    # watchlist = serializers.HyperlinkedRelatedField(many=True, read_only=True, view_name=\"movie-detail\")\n    class Meta:\n        model = StreamPlatform\n        fields = '__all__'\n# def name_length(name):\n#     if len(name) < 2:\n#         raise serializers.ValidationError('Name is too short.')",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "watchlist_app.api.urls",
        "description": "watchlist_app.api.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register('stream', StreamPlatformVS, basename='streamplatform')\nurlpatterns = [\n    path('list/', WatchListAV.as_view(), name='movie-list'),\n    path('list/<int:pk>/', WatchDetailAV.as_view(), name='movie-detail'),\n    path('', include(router.urls)),\n    # path('stream/', StreamPlatformAV.as_view(), name='stream-list'),\n    # path('stream/<int:pk>/', StreamDetailsAV.as_view(), name='stream-detail'),\n    # path('review/', ReviewList.as_view(), name='review-list'),\n    # path('review/<int:pk>', ReviewDetail.as_view(), name='review-details'),",
        "detail": "watchlist_app.api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "watchlist_app.api.urls",
        "description": "watchlist_app.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('list/', WatchListAV.as_view(), name='movie-list'),\n    path('list/<int:pk>/', WatchDetailAV.as_view(), name='movie-detail'),\n    path('', include(router.urls)),\n    # path('stream/', StreamPlatformAV.as_view(), name='stream-list'),\n    # path('stream/<int:pk>/', StreamDetailsAV.as_view(), name='stream-detail'),\n    # path('review/', ReviewList.as_view(), name='review-list'),\n    # path('review/<int:pk>', ReviewDetail.as_view(), name='review-details'),\n    path('stream/<int:pk>/review-create', ReviewCreate.as_view(), name='review-create'),\n    path('stream/<int:pk>/review', ReviewList.as_view(), name='review-list'),",
        "detail": "watchlist_app.api.urls",
        "documentation": {}
    },
    {
        "label": "ReviewCreate",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewCreate(generics.CreateAPIView):\n    serializer_class = ReviewSerializer\n    def perform_create(self, serializer):\n        # serializer.save(watchlist=WatchList.objects.get(pk=self.kwargs['pk']))\n        pk = self.kwargs['pk']\n        movie = WatchList.objects.get(pk=pk)\n        serializer.save(watchlist=movie)\nclass ReviewList(generics.ListAPIView):\n    serializer_class = ReviewSerializer\n    def get_queryset(self):",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewList",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewList(generics.ListAPIView):\n    serializer_class = ReviewSerializer\n    def get_queryset(self):\n        pk = self.kwargs['pk']\n        return Review.objects.filter(watchlist=pk)\nclass ReviewDetail(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Review.objects.all()\n    serializer_class = ReviewSerializer\n# class ReviewDetail(mixins.RetrieveModelMixin, generics.GenericAPIView):\n#     queryset = Review.objects.all()",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewDetail",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewDetail(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Review.objects.all()\n    serializer_class = ReviewSerializer\n# class ReviewDetail(mixins.RetrieveModelMixin, generics.GenericAPIView):\n#     queryset = Review.objects.all()\n#     serializer_class = ReviewSerializer\n#     def get(self, request, *args, **kwargs):\n#         return self.retrieve(request, *args, **kwargs)\n# class ReviewList(mixins.ListModelMixin, mixins.CreateModelMixin, generics.GenericAPIView):\n#     queryset = Review.objects.all()",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchListAV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class WatchListAV(APIView):\n    def get(self, request):\n        movies = WatchList.objects.all()\n        serializer = WatchListSerializer(movies, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = WatchListSerializer(data=request.data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data, status=rest_framework.status.HTTP_201_CREATED)",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchDetailAV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class WatchDetailAV(APIView):\n    def get(self, request, pk):\n        try:\n            movie = WatchList.objects.get(pk=pk)\n        except WatchList.DoesNotExist:\n            return Response({'Error':'WatchList not found'},status=rest_framework.status.HTTP_404_NOT_FOUND)\n        serializer = WatchListSerializer(movie)\n        return Response(serializer.data)\n    def put(self, request, pk):\n        try:",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamPlatformVS",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class StreamPlatformVS(viewsets.ViewSet):\n    def list(self, request):\n        platforms = StreamPlatform.objects.all()\n        serializer = StreamPlatformSerializer(platforms, many=True)\n        return Response(serializer.data)\n    def retrieve(self, request, pk=None):\n        queryset = StreamPlatform.objects.all()\n        watchlist = get_object_or_404(queryset, pk=pk)\n        serializer = StreamPlatformSerializer(watchlist)\n        return Response(serializer.data)",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamPlatformAV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class StreamPlatformAV(APIView):\n    def get(self, request):\n        platforms = StreamPlatform.objects.all()\n        # serializer = StreamPlatformSerializer(platforms, many=True, context={'request': request})\n        serializer = StreamPlatformSerializer(platforms, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = StreamPlatformSerializer(data=request.data)\n        if serializer.is_valid():\n            serializer.save()",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamDetailsAV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class StreamDetailsAV(APIView):\n    def get(self, request, pk):\n        try:\n            platform = StreamPlatform.objects.get(pk=pk)\n        except StreamPlatform.DoesNotExist:\n            return Response({'Error':'Stream Platform not found'},status=rest_framework.status.HTTP_404_NOT_FOUND)\n        serializer = StreamPlatformSerializer(platform)\n        return Response(serializer.data)\n    def put(self, request, pk):\n        try:",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0001_initial",
        "description": "watchlist_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Movie',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),",
        "detail": "watchlist_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "description": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('watchlist_app', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='StreamPlatform',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),",
        "detail": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0003_watchlist_platform",
        "description": "watchlist_app.migrations.0003_watchlist_platform",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('watchlist_app', '0002_streamplatform_watchlist_delete_movie'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='watchlist',\n            name='platform',\n            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='watchlist', to='watchlist_app.streamplatform'),\n            preserve_default=False,",
        "detail": "watchlist_app.migrations.0003_watchlist_platform",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0004_review",
        "description": "watchlist_app.migrations.0004_review",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('watchlist_app', '0003_watchlist_platform'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Review',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),",
        "detail": "watchlist_app.migrations.0004_review",
        "documentation": {}
    },
    {
        "label": "WatchlistAppConfig",
        "kind": 6,
        "importPath": "watchlist_app.apps",
        "description": "watchlist_app.apps",
        "peekOfCode": "class WatchlistAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'watchlist_app'",
        "detail": "watchlist_app.apps",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class StreamPlatform(models.Model):\n    name = models.CharField(max_length=50)\n    about = models.TextField(max_length=150)\n    website = models.TextField(max_length=100)\n    def __str__(self):\n        return self.name\n# Create your models here.\nclass WatchList(models.Model):\n    title = models.CharField(max_length=50)\n    storyline = models.CharField(max_length=200)",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class WatchList(models.Model):\n    title = models.CharField(max_length=50)\n    storyline = models.CharField(max_length=200)\n    platform = models.ForeignKey(StreamPlatform, on_delete=models.CASCADE, related_name='watchlist')\n    active = models.BooleanField(default=True)\n    created = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.title\nclass Review(models.Model):\n    watchlist = models.ForeignKey(WatchList, on_delete=models.CASCADE, related_name='reviews')",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class Review(models.Model):\n    watchlist = models.ForeignKey(WatchList, on_delete=models.CASCADE, related_name='reviews')\n    rating = models.PositiveIntegerField(validators=[MinValueValidator(1), MaxValueValidator(5)])\n    description = models.CharField(max_length=200, null=True)\n    active = models.BooleanField(default=True)\n    created = models.DateTimeField(auto_now_add=True)\n    update = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return str(self.rating) + ' ' + str(self.watchlist.title)",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "watchmate.asgi",
        "description": "watchmate.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "watchmate.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-6=+1tg6vkzr$^hmf8z4vz(6j#qwd2=xye)8a+!n!jb1%_qd_rl'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-6=+1tg6vkzr$^hmf8z4vz(6j#qwd2=xye)8a+!n!jb1%_qd_rl'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'watchlist_app',",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'watchlist_app',\n    'rest_framework'\n]",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'watchmate.urls'",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "ROOT_URLCONF = 'watchmate.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "WSGI_APPLICATION = 'watchmate.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "watchmate.urls",
        "description": "watchmate.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('watch/', include('watchlist_app.api.urls')),\n]",
        "detail": "watchmate.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "watchmate.wsgi",
        "description": "watchmate.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "watchmate.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'watchmate.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]